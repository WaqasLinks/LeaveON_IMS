@model MYBUSINESS.Models.Customer

@{
    ViewBag.Title = "Create Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <form role="form">
        <div class="content-wrapper">
            <section class="content">
                <div class="row">
                    <!-- left column -->
                    <div class="col-md-4">
                        <!-- general form elements -->
                        <div class="box box-primary">
                            <div class="box-header with-border">
                                <h3 class="box-title">Create New Customer</h3>
                            </div>

                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.SuggestedNewCustId, @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label" }) (Customer has to pay)

                                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })

                                </div>
                                @* ---------------------------------------------------------------------------------- *@
                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.AccountType, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompanyNo, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.CompanyNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CompanyNo, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email1, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Email1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email1, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cell, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Cell, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Cell, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingCity, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BillingCity, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingCity, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingZip, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BillingZip, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingZip, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingState, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BillingState, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingState, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.BillingCountry, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BillingCountry, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BillingCountry, "", new { @class = "text-danger" })

                                </div>
                                @* -------------------------------------------------------- *@
                                
                            <div class="form-group">
                                @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label" })

                                <select class="form-control" name="Term" id="Term" data-toggle="tooltip" data-placement="top" title="Select Status">
                                    <option value="Cash only" selected>Cash only</option>
                                    <option value="Due on receipt">Due on receipt</option>
                                    <option value="Net 7">Net 7</option>
                                    <option value="Net 15">Net 15</option>
                                </select>

                                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })

                            </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DriversLicense, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.DriversLicense, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DriversLicense, "", new { @class = "text-danger" })

                                </div>

                                @*<div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })

        </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Referral, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.CreditCardInfo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreditCardInfo, "", new { @class = "text-danger" })

                                </div>


                            </div>
                            <div class="box-footer">
                                <input type="submit" value="Create" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index")
                            </div>

                        </div>
                    </div>

                    <div class="col-md-8">
                        <!-- general form elements -->
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h3 class="box-title"></h3>
                            </div>

                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })*@

                                    <textarea id="compose_textarea" name="Notes" rows="1" cols="100" class="form-control" placeholder="Notes/Pictures" data-toggle="tooltip" data-placement="top" title="Notes"></textarea>
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

                                </div>


                            </div>
                            @*<div class="box-footer">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    @Html.ActionLink("Back to List", "Index")
                                </div>*@

                        </div>
                    </div>

                </div>
            </section>
        </div>
    </form>
}
@* v for summernote *@
<!-- include libraries(jQuery, bootstrap) -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
@*<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>*@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<!-- include summernote css/js -->
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
@* ^ summernote *@

<script type="text/javascript">
    $("#compose_textarea").summernote({
        height: 500
    });
</script>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

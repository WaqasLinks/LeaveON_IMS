@model MYBUSINESS.Models.Product

@{
    ViewBag.Title = "Update Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form role="form">
        <div class="content-wrapper">
            <section class="content">
                <div class="row">
                    <!-- left column -->
                    <div class="col-md-4">
                        <!-- general form elements -->
                        <div class="box box-primary">
                            <div class="box-header with-border">
                                <h3 class="box-title">Update Product</h3>
                            </div>

                            <div class="box-body">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @*@Html.HiddenFor(model => model.Id)*@


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @Readonly = "Readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

                                </div>



                                @*@Html.HiddenFor(model => model.IsService, new { Value = "false" })*@
                                @Html.HiddenFor(model => model.ShowIn, new { Value = "P" })
                                <div class="form-group">
                                    @Html.DropDownList("IsService", new SelectList(ViewBag.UnitTypeOptionList, "Value", "Text", Model.IsService),
                                    new { @class = "form-control", id = "isService" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BarCode, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BarCode, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @id = "stock" } })
                                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })

                                </div>
                                <div style="display:none;" class="form-group">
                                    @Html.LabelFor(model => model.PerPack, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.PerPack, new { htmlAttributes = new { @class = "form-control", @id = "perPack" } })
                                    @Html.ValidationMessageFor(model => model.PerPack, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Serialize, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Serialize, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Serialize, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BulkInfo, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.BulkInfo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BulkInfo, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Track, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Track, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Track, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SerialVin, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.SerialVin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SerialVin, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })

                                    @*<select class="form-control" name="Type" id="Term" data-toggle="tooltip" data-placement="top" title="Select Status">
                                        <option value="Rental" selected>Rental</option>
                                        <option value="Service">Service</option>
                                        <option value="Sell">Sell</option>
                                        <option value="Other">Other</option>
                                    </select>*@
                                    @Html.DropDownList("Type", new List<SelectListItem>
                                    {
                                       new SelectListItem{ Text="Rental", Value = "Rental" },
                                       new SelectListItem{ Text="Service", Value = "Service" },
                                       new SelectListItem{ Text="Sell", Value = "Sell" },
                                       new SelectListItem{ Text="Other", Value = "Other" },
                                    }, htmlAttributes: new { @class = "form-control" })

                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })

                                    @*<select class="form-control" name="Category" id="Term" data-toggle="tooltip" data-placement="top" title="Select Status">
                                        <option value="Track loaders" selected>Track loaders</option>
                                        <option value="Skidsteers">Skidsteers</option>
                                        <option value="Mini excavators">Mini excavators</option>
                                        <option value="Be able to add more">Be able to add more</option>
                                    </select>*@
                                    @Html.DropDownList("Category", new List<SelectListItem>
                                    {
                                       new SelectListItem{ Text="Track loaders", Value = "Track loaders" },
                                       new SelectListItem{ Text="Skidsteers", Value = "Skidsteers" },
                                       new SelectListItem{ Text="Mini excavators", Value = "Mini excavators" },
                                       //new SelectListItem{ Text="add more", Value = "add more" },
                                    }, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label" })

                                    @*<select class="form-control" name="Brand" id="Term" data-toggle="tooltip" data-placement="top" title="Select Status">
                                        <option value="BOBCAT" selected>BOBCAT</option>
                                        <option value="CASE">CASE</option>
                                        <option value="CATERPILLAR">CATERPILLAR</option>
                                        <option value="DOOSAN">DOOSAN</option>
                                    </select>*@
                                    @Html.DropDownList("Brand", new List<SelectListItem>
                                    {
                                       new SelectListItem{ Text="BOBCAT", Value = "BOBCAT" },
                                       new SelectListItem{ Text="CASE", Value = "CASE" },
                                       new SelectListItem{ Text="CATERPILLAR", Value = "CATERPILLAR" },
                                       new SelectListItem{ Text="DOOSAN", Value = "DOOSAN" },
                                    }, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ModelNumber, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })

                                </div>
                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })

                                </div>*@
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OwnersCode, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.OwnersCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OwnersCode, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RentalsCode, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.RentalsCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RentalsCode, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.DateOfPurchase, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.DateOfPurchase, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                    @Html.ValidationMessageFor(model => model.DateOfPurchase, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MonthlyPayment, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.MonthlyPayment, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MonthlyPayment, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.InsuranceInfo, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.InsuranceInfo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.InsuranceInfo, "", new { @class = "text-danger" })

                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Saleable, htmlAttributes: new { @class = "control-label" })



                                    @Html.EditorFor(model => model.Saleable)

                                    @*@Html.EditorFor(model => model.Saleable, new[] { new SelectListItem { Text = "Yes", Value = "True", Selected = true }, new SelectListItem { Text = "No", Value = "False" } })*@

                                    @*@Html.CheckBoxFor(m => m.Saleable, new { @value = "true" })*@

                                    @Html.ValidationMessageFor(model => model.Saleable, "", new { @class = "text-danger" })

                                </div>


                            </div>


                            <div class="box-footer">
                                <input type="submit" value="Update" class="btn btn-primary" />
                                @Html.ActionLink("Back to List", "Index")
                            </div>



                        </div>
                    </div>
                    <div class="col-md-8">
                        <!-- general form elements -->
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h3 class="box-title"></h3>
                            </div>

                            <div class="box-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })*@

                                    <textarea id="compose_textarea" name="Notes" rows="1" cols="100" class="form-control" placeholder="Notes/Pictures" data-toggle="tooltip" data-placement="top" title="These remarks will not print on bill">@Model.Notes</textarea>
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

                                </div>


                            </div>
                            @*<div class="box-footer">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    @Html.ActionLink("Back to List", "Index")
                                </div>*@

                        </div>
                    </div>
                </div>
            </section>
        </div>

    </form>
}

@* v for summernote *@
<!-- include libraries(jQuery, bootstrap) -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" rel="stylesheet">
@*<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>*@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<!-- include summernote css/js -->
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
@* ^ summernote *@

<link href="@Url.Content("~/Content/custom/downloads/jquery-ui-1.12.1.custom/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
@*<link href="@Url.Content("~/Content/custom/downloads/jquery-ui.min.css")" rel="stylesheet" type="text/css" />*@
<script src="~/Content/custom/downloads/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>

<script>
    $("#compose_textarea").summernote({
        height: 500
    });
    //$('#packing,#perPack').keyup(function () {

    //    $("#stock").val($("#packing").val() * $("#perPack").val())
    //});

    $(function () { // will trigger when the document is ready
        //var date = $('.datepicker').datepicker({ dateFormat: 'dd-mm-yy' }).val();
        $('.datepicker').datepicker({
            dateFormat: 'dd-M-yy',
            showOn: "both",
            buttonImageOnly: true,
            buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif",

            //buttonText: "Select date"
        });

    });
    //$('#Category').change(function () { 
    //    sel = $(this).val();
    //    if (sel == 'add more') {
    //        window.location.href = '/Calendars/Create';
    //    }
    //});
</script>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

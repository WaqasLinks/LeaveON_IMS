@model IEnumerable<MYBUSINESS.Models.SO>

@{
    /**/

    /**/

    int TotalSOQty = 0;
    decimal TotalSOAmout = 0;
    int TotalSRQty = 0;
    decimal TotalSRAmout = 0;
    decimal TotalProfit = 0;
    decimal BillPaid = 0;
    decimal Discount = 0;
    decimal Balance = 0;
    decimal PrevBalance = 0;
    string whtieSpace = ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString() + ((char)160).ToString();
    MYBUSINESS.Models.Employee currentUser = (MYBUSINESS.Models.Employee)HttpContext.Current.Session["CurrentUser"];
    //Dictionary<decimal, decimal> LstMaxSerialNo = new Dictionary<decimal, decimal>();
    //Dictionary<decimal, decimal> LstMaxSerialNo = @ViewBag.LstMaxSerialNo;
    Dictionary<decimal, decimal> LstMaxSerialNo = ViewBag.LstMaxSerialNo as Dictionary<decimal, decimal>;
    <div id="NewData">
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        @*<div class="box-header">
                            <h3 class="box-title">Hover Data Table</h3>
                        </div>*@
                        <!-- /.box-header -->
                        <div class="box-body">
                            <table class="table table-hover cell-border" id="example">
                                <thead>
                                    <tr>
                                        <th style="width:13%;">
                                            @Html.DisplayNameFor(model => model.Date)
                                        </th>
                                        <th>
                                            Order No.
                                        </th>

                                        <th>
                                            Status
                                        </th>

                                        <th style="display:none;"></th>

                                        <th style="width:15%;">
                                            @Html.DisplayName("Customer")

                                        </th>

                                        <th>Type</th>

                                        <th style="display:none;">
                                            @Html.DisplayNameFor(model => model.SaleOrderQty)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.SaleOrderAmount)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.Discount)
                                        </th>
                                        <th>
                                            Prev. Balance
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.BillPaid)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.Balance)
                                        </th>
                                        @*@if (currentUser.EmployeeTypeId == 0)
                                        {//S@S*@
                                            <th>
                                                @Html.DisplayNameFor(model => model.Profit)
                                            </th>

                                        @*}*@
                                        <th>
                                            User
                                        </th>


                                        <th style="width:8%;">
                                            Actions
                                        </th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Date)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SOSerial)
                                            </td>
                                            <td>
                                                @if (item.Status == "polo")
                                                {
                                                    <span class="label label-success">polo</span>
                                                }
                                                else if (item.Status == "melo")
                                                {
                                                    <span class="label label-info">melo</span>
                                                }
                                                else if (item.Status == "david")
                                                {
                                                    <span class="label label-warning">david</span>
                                                }

                                            </td>
                                            <td class="CustomerIdForSearch" style="display:none;">
                                                @Html.DisplayFor(modelItem => item.Customer.Id)
                                            </td>
                                            <td class="CustomerNameForSearch111">
                                                @Html.DisplayFor(modelItem => item.Customer.Name)
                                                @*@Html.ActionLink(item.Customer.Name, "Edit", new { id = item.Id })*@

                                                @*<a href="#" data-toggle="tooltip" data-placement="top" title="Search this customer in sales"> @Html.DisplayFor(modelItem => item.Customer.Name)</a>*@

                                                @*<ul class="nav navbar-nav">*@
                                                @*<li class="dropdown">*@
                                                @*<a href="/Products/Index">@item.Customer.Name <b class="caret"></b></a>*@
                                                @*@item.Customer.Name <b class="caret"></b>
                                                <ul id="products-menu" class="dropdown-menu clearfix" role="menu">
                                                    <li><a href="#" data-toggle="tooltip" data-placement="top" title="Search this customer in Sales">Search in Sales History</a></li>

                                                </ul>*@
                                                @*</li>*@
                                                @*</ul>*@



                                            </td>
                                            <td>
                                                @*@{
                                                    if (item.SaleReturn == null || item.SaleReturn == false)
                                                    {
                                                        <input id="SR_@(item.SOSerial)" type="checkbox" data-toggle="toggle" data-on="Return" data-off="Sale">
                                                    }
                                                    else
                                                    {
                                                        <input id="SR_@(item.SOSerial)" type="checkbox" data-toggle="toggle" data-on="Return" data-off="Sale" checked>
                                                    }
                                                }*@

                                                @if (item.SelectedOption == 1)
                                                {
                                                <span class="label label-success">Rental</span>
                                                    }
                                                else if (item.SelectedOption == 2)
                                                {
                                                    <span class="label label-info">Sale</span>
                                                }
                                                else if (item.SelectedOption == 3)
                                                {
                                                    <span class="label label-warning">Repair</span>
                                                }


                                            </td>
                                            <td style="display:none;">

                                                @Html.DisplayFor(modelItem => item.SaleOrderQty)

                                                @{
                                                    if (item.SaleReturn == false)
                                                    {
                                                        TotalSOQty += (int)item.SaleOrderQty;
                                                    }
                                                    else
                                                    {
                                                        TotalSOQty -= (int)item.SaleOrderQty;
                                                    }

                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SaleOrderAmount)
                                                @{
                                                    if (item.SaleReturn == false)
                                                    {
                                                        TotalSOAmout += (decimal)item.SaleOrderAmount;
                                                    }
                                                    else
                                                    {
                                                        TotalSOAmout -= (decimal)item.SaleOrderAmount;
                                                    }

                                                }
                                            </td>


                                            <td>
                                                @Html.DisplayFor(modelItem => item.Discount)
                                                @{
                                                    if (item.SaleReturn == false)
                                                    {
                                                        Discount += (decimal)item.Discount;
                                                    }
                                                    else
                                                    {
                                                        Discount -= (decimal)item.Discount;
                                                    }

                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PrevBalance)
                                                @{
                                                    if (item.SaleReturn == false)
                                                    {
                                                        PrevBalance += (decimal)item.PrevBalance;
                                                    }
                                                    else
                                                    {
                                                        PrevBalance -= (decimal)item.PrevBalance;
                                                    }

                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.BillPaid)
                                                @{
                                                    if (item.SaleReturn == false)
                                                    {
                                                        BillPaid += item.BillPaid;
                                                    }
                                                    else
                                                    {
                                                        BillPaid -= item.BillPaid;
                                                    }

                                                }

                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.Balance)
                                            </td>
                                            @*@if (currentUser.EmployeeTypeId == 0)
                                            {//S@S*@
                                                <td>
                                                    @*@(item.BillAmount - (decimal)item.Discount - item.TotalPurchaseAmount)*@
                                                    @Html.DisplayFor(modelItem => item.Profit)
                                                    @{
                                                        if (item.SaleReturn == false)
                                                        {
                                                            TotalProfit += (decimal)item.Profit;
                                                        }
                                                        else
                                                        {
                                                            TotalProfit -= (decimal)item.Profit;
                                                        }

                                                    }
                                                </td>
                                            @*}//S@S*@
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Employee.Login)
                                            </td>
                                            <td>
                                                @{

                                                    if (LstMaxSerialNo != null && LstMaxSerialNo.ContainsValue((int)item.SOSerial))
                                                    {
                                                        @Html.ActionLink("Update", "Edit", new { id = item.Id, update = true })
                                                    }
                                                    else
                                                    {

                                                        @Html.ActionLink(whtieSpace + "View", "Edit", new { id = item.Id, update = false })
                                                    }

                                                }
                                                |
                                                @Html.ActionLink("Print", "PrintSO3", new { id = item.Id })
                                                @*|
                                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
                                            </td>
                                        </tr>
                                        //Balance = TotalSOAmout - TotalSRAmout - BillPaid - Discount - PrevBalance;
                                    }
                                </tbody>
                                <tfoot>

                                    <!--<tr style="font-weight:bold">
                                    <td></td>
                                    <td>@Model.Count()</td>
                                    <td></td>
                                    <td style="display:none;"></td>
                                    <td></td>
                                    <td></td>
                                    <td style="display:none;">@TotalSOQty</td>
                                    <td>@TotalSOAmout</td>


                                    <td>@Discount</td>
                                    <td>-->
                                    @*@PrevBalance*@
                                    <!--</td>
                                    <td>@BillPaid</td>-->
                                    <!--<td>-->@*@ViewBag.TotalBalance*@<!--</td>-->
                                    @*@if (currentUser.EmployeeTypeId == 0)
                                        {
                                            <td>@TotalProfit.ToString("0")</td>
                                        }*@
                                    @*<td></td>
                                                <td></td>
                                            </tr>
                                        </tfoot>*@
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </section>



    </div>

}


<link href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.1.0/css/buttons.dataTables.min.css" rel="stylesheet" />

@*<script src="https://code.jquery.com/jquery-3.5.1.js"></script>*@
<script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.0/js/buttons.print.min.js"></script>
@* toggle *@
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        //$("#success-alert").hide();

        //$("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
        //    $("#success-alert").slideUp(500);
        //});
        //$('#toggle').bootstrapToggle({
        //    on: 'Enabled',
        //    off: 'Disabled'

        //});

        //$(document).on('change', ":checkbox", function () {

        //    var checkbox = $(this).prop('checked');
        //    alert(checkbox);
        //});

        //$('[id^="SR"]').click(function () {
        //    var isChecked = $(this).is(':checked');
        //    alert(isChecked);
        //});

        $(document).ajaxStart(function () {
            /*$("#wait").css("display", "block");*/
        });

        $(document).ajaxComplete(function () {
            /*$("#wait").css("display", "none");*/
        });

        $('[id^="SR"]').change(function () {
            //var end = this.value;
            //var firstDropVal = $('#saleType').val();
            /*update_itemTotal();*/
            /*alert($(this).attr('id'));*/
            var SOSerial = $(this).attr('id');
            var SaleStatus = false;
            var checkbox = $(this).prop('checked');
            var sent = false;
            //alert(checkbox);
            //var checkBoxes = $("input[type='checkbox']");
            //alert(checkBoxes);
            /*if ($(this).attr('checked') == true) {*/
            //var lastValue = $(this).prop('checked');

            if ($(this).prop('checked') == true) {
                SaleStatus = true;
                //$(this).prop('checked', true);
                //alert($(this).prop('checked'));

            }
            else {
                SaleStatus = false;
                //$(this).prop('checked', false);
                //alert($(this).prop('checked'));

            }

            if (sent == true) {

            }
            sent = true;


             $.ajax({
                url: "@Url.Action("ToggleSaleStatus", "SOSR")",
                data: { 'SOSerial': SOSerial, 'SaleStatus': SaleStatus },
                type: "POST",
                cache: false,
                success: function (data) {
                    //alert('Sales Status Change Successfully');
                    /*$("#NewData").html(data);*/

                    $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                        $("#success-alert").slideUp(500);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //$('#lblCommentsNotification').text("Error encountered while saving the comments.");
                    alert('Data provided was not valid');
                }
            });
        });




        //$('#SOSRIndex').DataTable({
        //    fixedHeader: {
        //        footer: true
        //    }
        //});
        $('#example').DataTable({
            "paging": true,
            "lengthChange": true,
            "pageLength": 100,
            "searching": true,
            "ordering": true,
            "info": false,
            "autoWidth": true,
            "responsive": true,
            "order": [[1, "desc"]]//,
            //dom: 'Bfrtip',
            //buttons: [
            //  'copy', 'csv', 'excel', 'pdf', 'print'
            //]



            //"footerCallback": function (row, data, start, end, display) {
            //    var api = this.api(), data;

            //    // Remove the formatting to get integer data for summation
            //    var intVal = function (i) {
            //        return typeof i === 'string' ?
            //            i.replace(/[\$,]/g, '') * 1 :
            //            typeof i === 'number' ?
            //                i : 0;
            //    };

            //    // Order No
            //    pageTotal = api
            //        .column(1, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            a += 1;
            //            //alert(a);
            //            return intVal(a);
            //        }, 0);
            //    $(api.column(1).footer()).html(pageTotal);


            //    // Order Qty
            //    pageTotal = api
            //        .column(4, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(4).footer()).html(pageTotal);



            //    // Order Amount
            //    pageTotal = api
            //        .column(5, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(5).footer()).html(pageTotal);

            //    // Return Qty
            //    pageTotal = api
            //        .column(6, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(6).footer()).html(pageTotal);

            //    // Return amnt
            //    pageTotal = api
            //        .column(7, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(7).footer()).html(pageTotal);

            //    // Discount
            //    pageTotal = api
            //        .column(8, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(8).footer()).html(pageTotal);


            //    // Bill paid
            //    pageTotal = api
            //        .column(10, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(10).footer()).html(pageTotal);

            //    // Balance
            //    //pageTotal = api
            //    //    .column(11, { page: 'current' })
            //    //    .data()
            //    //    .reduce(function (a, b) {
            //    //        return intVal(a) + intVal(b);
            //    //    }, 0);
            //    //$(api.column(11).footer()).html(pageTotal);

            //    // Profit
            //    pageTotal = api
            //        .column(12, { page: 'current' })
            //        .data()
            //        .reduce(function (a, b) {
            //            return intVal(a) + intVal(b);
            //        }, 0);
            //    $(api.column(12).footer()).html(pageTotal);

            //}

        });

    });


</script>
